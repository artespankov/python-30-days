Iterator
- object that implements iterator protocol (__iter__, __next__ methods)
- __iter__ method should return an object that has __next__ method
- once exhausted, throws StopIteration and should be re-instantiated for being used (in loops)

Iterable
- object (sequence) that has only __iter__ method returning iterator
- can be looped over and over again without instantiating
- can be turned to iterator explicitly (not in loop iteration or a like) with iter() method

Generator method
- creates an iterator with yield keyword
- yield pauses execution in the body of function, on next iteration continues from the next step
- more convenient way to make iterator - syntactic sugar